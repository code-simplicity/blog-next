user nginx;
worker_processes 1;
events {
    multi_accept on;
    worker_connections 2048;
}
http {
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;
    gzip  on;   #开启gzip
    gzip_min_length 1k; #低于1kb的资源不压缩
    gzip_comp_level 3; #压缩级别【1-9】，越大压缩率越高，同时消耗cpu资源也越多，建议设置在4左右。
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;  #需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片，下面会讲为什么。
    gzip_disable "MSIE [1-6]\.";  #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip
    gzip_vary on;  #是否添加“Vary: Accept-Encoding”响应头
    # MIME
    include                mime.types;
    default_type           application/octet-stream;
    # Logging
    access_log             /var/log/nginx/access.log;
    error_log              /var/log/nginx/error.log warn;
    # jenkins走到代理路由和域名映射
    upstream jenkins-server {
        server 172.21.0.1:8080 weight=10;
    }
    # 博客后端的接口地址
    upstream blog-system {
        server  172.21.0.1:8081 weight=10;
    }
    # 博客门户走到路径和代理服务
    upstream blog-next {
        server  172.21.0.1:3000 weight=10;
    }
    # 配置Jenkins的访问
    server {
        listen 80;
        #listen 443 ssl;
        server_name jenkins.bugdr.cn;
        root html;
        index index.html index.htm;
        #ssl_certificate ssl/5479691_www.bugdr.cn.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
        #ssl_certificate_key ssl/5479691_www.bugdr.cn.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。
        #ssl_session_timeout 10m;
        #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        #表示使用的加密套件的类型。
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
        #ssl_prefer_server_ciphers on;
        
        location / {
            proxy_pass http://jenkins-server;
            #以下是一些反向代理的配置可删除
			proxy_redirect             off;
			#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
			proxy_set_header           Host $host;
			proxy_set_header           Cookie $http_cookie;
			proxy_set_header           X-Real-IP $remote_addr;
			proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;
			proxy_set_header           X-Forwarded-Server $host;
        }
    }
    # 配置next门户服务的接口
    server {
        listen 80;
        #listen 443 ssl;
        server_name www.bugdr.cn;
        root html;
        index index.html index.htm;
        #ssl_certificate ssl/5479691_www.bugdr.cn.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
        #ssl_certificate_key ssl/5479691_www.bugdr.cn.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。
        #ssl_session_timeout 10m;
        #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        #表示使用的加密套件的类型。
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
        #ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://blog-next;
                        #以下是一些反向代理的配置可删除
			proxy_redirect             off;
			#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
			proxy_set_header           Host $host;
			proxy_set_header           Cookie $http_cookie;
			proxy_set_header           X-Real-IP $remote_addr;
			proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;
			proxy_set_header           X-Forwarded-Server $host;
        }
        location /api {
            proxy_pass http://blog-system;
                        #以下是一些反向代理的配置可删除
			proxy_redirect             off;
			#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
			proxy_set_header           Host $host;
			proxy_set_header           Cookie $http_cookie;
			proxy_set_header           X-Real-IP $remote_addr;
			proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;
			proxy_set_header           X-Forwarded-Server $host;
        }
    }
}